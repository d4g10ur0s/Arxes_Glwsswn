to swsto

1. <program> -> PROGRAM <name> '\n' [{<funct>}] <main_program> *

2. <name> -> 'a-z' | 'A-Z' | '0-9' | ε | 'a-z'<name> | 'A-Z'<name> | '0-9'<name> 

3. <funct> -> FUNCTION <f_name> '(' <params>[ { ',' <params>} ] ')' '\n' [<var_declaration>[ { '\n' <var_declaration>} | {<var_declaration>} | {'\t'<var_declaration>} ] ] <commands> [{<commands>}] RETURN <to_ret> END_FUNCTION
*** <f_name> -> <name>   ***
***<params> -> <variable> ***

4. <var_declaration> -> VARS <typos_kai_metavlhth> [ {',' <variable>} ] ';'

5. <typos_kai_metavlhth> -> INTEGER <variable> | CHAR <variable>

6. <variable> -> <name> | <name>'['INTEGER']'

7. <int_val> -> 0-9 | 0-9<int_val> | ε

8. <char> -> 'A-Z'[{ <char> }] | 'a-z'[{ <char> }] | '0-9'[{ <char> }] | ε

9. <to_ret> -> <name> | <int_val> | <char>

10. <main_program> -> STARTMAIN [<var_declaration>] <commands>[{<commands>}] ENDMAIN

11. <commands> -> <ana8esh> | <vroxos> | <elegxos> | <ektypwsh> | <termatismos_vroxoy> | <sxolia> | <ana8esh><commands> | <vroxos><commands> | <elegxos><commands> | <ektypwsh><commands> | <termatismos_vroxoy><commands> | <sxolia><commands> | ε

12. <ana8esh> -> <name> = <stmt>;

13. <stmt> -> <int_val> | <char> | <name> | <parastash> | *<function_call>

14. <parastash> -> <term> | <parastash> + <term> | <parastash> - <term>

15. <term> -> <power> |
	      <term> * <power> |
	      <term> / <power> 

16. <power> -> <fact> ^ <power> |
	       <fact>

17. <fact> -> <var> |
	      '(' <parastash> ')'

18. <var> -> <int_val> | <name>

19. <ektypwsh> -> PRINT'(' ' " ' <char> ' " '[ {,<metavlhtes>}] ')' ';'

20. <sxolia> -> '%'<char> '\n'

21. <vroxos> -> <while_loop> |
		<for_loop>

22. <while_loop> -> WHILE '(' <syn8hkh> ')'
		    <commands>
		    ENDWHILE

23. <syn8hkh> -> <parastash> | 
		 <parastash> < <parastash> |
		 <parastash> <= <parastash> |
		 <parastash> >= <parastash> |
		 <parastash> > <parastash> |
		 <parastash> == <parastash> |
		 <syn8hkh> OR <syn8hkh> |
		 <syn8hkh> AND <syn8hkh> |
		 ε

24. <for_loop> -> FOR counter ':=' INTEGER TO INTEGER STEP INTEGER 
		  <commands> 
		  ENDFOR

25. <elegxos> -> <if_clause> |
		 <switch_clause>

26. <if_clause> -> IF '(' <syn8hkh> ')' THEN 
		   <commands> 
		   [{ELSEIF'('syn8hkh')'<commands>}]
		   [ELSE<commands>]
		   ENDIF

27. <switch_clause> -> SWITCH'('<parastash>')' 
		       CASE'('<parastash>') : '<commands> 
		       [CASE'('<parastash>') : '<commands>]
		       [DEFAULT':'<commands>] 
		       ENDSWITCH

28. <termatismos_vroxou> -> BREAK';'









